#!/bin/bash

# # This script reads the 'data.json' file, extracts specific details,
# # and formats them into a human-readable sentence.
# # It uses 'jq' to parse the JSON and outputs a tab-separated line of data,
# # which is then piped to 'awk' for final formatting and calculations.

# # Use jq to extract the raw data and format it as a single tab-separated line.
# jq -r '[.name, .types[0].type.name, .weight, .height] | @tsv' data.json | \
# # Pipe the output to awk to perform the formatting and unit conversions.
# awk -F'\t' '{
#     name = $1
#     type = $2
#     formatted_weight = $3 / 10
#     formatted_height = $4 / 10
#     printf "%s is of type %s, weighs %.0fkg, and is %.1fm tall.\n", name, type, formatted_weight, formatted_height

# }'



jq -r '.name, .height, .weight, .types[0].type.name' pikachu.json | \
awk '
  NR == 1 { name = $0 }
  NR == 2 { height = $0 / 10 }
  NR == 3 { weight = $0 / 10 }
  NR == 4 { type = $0 }
  END {
    printf "%s is of type %s, weighs %.1fkg, and is %.1fm tall.\n", name, type, weight, height
  }
' | \
sed 's/  */ /g'  # Remove extra spaces (though awk's printf doesnâ€™t add them)